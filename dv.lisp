(defun dv/map (str)
    (map 'string
		 #'(lambda (x) (case x
						 (#\a #\a)
						 (#\b #\x)
						 (#\c #\j)
						 (#\d #\e)
						 (#\e #\.)
						 (#\f #\u)
						 (#\g #\i)
						 (#\h #\d)
						 (#\i #\c)
						 (#\j #\h)
						 (#\k #\t)
						 (#\l #\n)
						 (#\m #\m)
						 (#\n #\b)
						 (#\o #\r)
						 (#\p #\l)
						 (#\q #\')
						 (#\r #\p)
						 (#\s #\o)
						 (#\t #\y)
						 (#\u #\g)
						 (#\v #\k)
						 (#\w #\,)
						 (#\x #\q)
						 (#\y #\f)
						 (#\z #\;)
						 (t x)))
		 str))


(defun progress-file (file)
(with-open-file (stream file)
  (let (line)
    (format t "~s~%" (dv/map line)))))

(defun main ()
  (dv/map "d çš„"))

